<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qfedu.vhr.framework.mapper.MenuMapper">
    <resultMap id="BaseResultMap" type="com.qfedu.vhr.framework.entity.Menu">
        <id property="id" column="id"/>
        <result property="url" column="url"/>
        <result property="name" column="name"/>
        <result property="enabled" column="enabled"/>
        <result property="parentId" column="parentId"/>
        <result property="path" column="path"/>
        <result property="iconCls" column="iconCls"/>
        <result property="component" column="component"/>
        <result property="keepAlive" column="keepAlive"/>
        <result property="requireAuth" column="requireAuth"/>
    </resultMap>

    <resultMap id="MenuWithChildren" type="com.qfedu.vhr.framework.entity.vo.MenuVO" extends="BaseResultMap">
        <collection property="children" ofType="com.qfedu.vhr.framework.entity.Menu">
            <id property="id" column="id2"/>
            <result property="name" column="name2"/>
            <result property="enabled" column="enabled2"/>
            <result property="parentId" column="parentId2"/>
            <result property="path" column="path2"/>
            <result property="component" column="component2"/>
        </collection>
    </resultMap>

    <resultMap id="MenuWithRole" type="com.qfedu.vhr.framework.entity.vo.MenuRoleVO">
        <id property="id" column="id"/>
        <result property="url" column="url"/>
        <collection property="roles" ofType="com.qfedu.vhr.framework.entity.Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
        </collection>
    </resultMap>

    <select id="getAllMenusByHrId" resultMap="MenuWithChildren">

                select m1.*,m2.`component` as component2,m2.`enabled` as enabled2,m2.`id` as id2,m2.`name` as name2,m2.`parentId` as parentId2,m2.`path` as path2 from menu m1,menu m2,menu_role mr,hr_role hrr where m1.`id`=m2.`parentId` and m2.`id`=mr.`mid` and mr.`rid`=hrr.`rid` and hrr.`hrid`=#{hrid} order by m1.`id`

    </select>

    <select id="getAllMenuRoles" resultMap="MenuWithRole">
        select m.`id`,m.`url`,r.`id` as rid ,r.`name` as rname from menu m left join menu_role mr on m.`id`=mr.`mid` left join role r on r.`id`=mr.`rid` order by m.`id`
    </select>

    <select id="getAllMenusWithChildren" resultMap="MenuWithChildren">
select m1.*,m2.`component` as component2,m2.`enabled` as enabled2,m2.`id` as id2,m2.`name` as name2,m2.`parentId` as parentId2,m2.`path` as path2 from menu m1,menu m2 where m1.`id`=m2.`parentId` and m1.`id`!=1 order by m1.id
    </select>

    <select id="getSelectedMenus" resultType="java.lang.Integer">
        select m.`id` from role r left join menu_role mr on mr.`rid`=r.`id` left join menu m on m.`id`=mr.`mid` where r.`name`=#{name}
    </select>

    <delete id="deleteMenuRoleByRid">
        delete from menu_role where rid=#{rid}
    </delete>

    <insert id="addRoleMenus">
        insert into menu_role (mid,rid) values
        <foreach collection="mids" separator="," item="mid">
            (#{mid},#{rid})
        </foreach>
    </insert>
</mapper>
